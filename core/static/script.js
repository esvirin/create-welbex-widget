/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./apiCalls.js":
/*!*********************!*\
  !*** ./apiCalls.js ***!
  \*********************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./constants.js */ \"./constants.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (constants) {\n    const { ROOT_URL } = constants\n\n    async function getPayment(invId) {\n        try {\n            return await (await fetch(`${ROOT_URL}/payment?inv_id=${invId}`)).json()\n        } catch {\n            return null\n        }\n    }\n    async function getPaymentUrl(tariffId, widgetId, accountId) {\n        try {\n            return await (\n                await fetch(\n                    `${ROOT_URL}/robokassa/payment-url?tariff_id=${tariffId}&account_id=${accountId}&widget_id=${widgetId}`\n                )\n            ).json()\n        } catch {\n            return null\n        }\n    }\n\n    async function getWidget(amo_widget_id) {\n        try {\n            return await (await fetch(`${ROOT_URL}/registerWidget?amo_id=${amo_widget_id}`)).json()\n        } catch {\n            return null\n        }\n    }\n\n    async function getAccount(amo_id) {\n        try {\n            return await (await fetch(`${ROOT_URL}/registerAccount?amo_id=${amo_id}`)).json()\n        } catch {\n            return null\n        }\n    }\n\n    async function getLicence(widgetId, accountId) {\n        try {\n            return await (await fetch(`${ROOT_URL}/licence/${widgetId}/${accountId}`)).json()\n        } catch {\n            return null\n        }\n    }\n\n    async function getWidgetInfo(client_id) {\n        try {\n            return (\n                await fetch(`https://${AMOCRM.constant('account').subdomain}.amocrm.ru/v3/clients/${client_id}`)\n            ).json()\n        } catch {\n            return null\n        }\n    }\n\n    async function getTariffs(widget_id) {\n        try {\n            return await (await fetch(`${ROOT_URL}/tariff/widget/${widget_id}`)).json()\n        } catch {\n            return null\n        }\n    }\n\n    async function getInstallation(widgetId, accountId) {\n        try {\n            return await (await fetch(`${ROOT_URL}/installation/${widgetId}/${accountId}`)).json()\n        } catch {\n            return null\n        }\n    }\n\n    async function createInstallation(info) {\n        try {\n            return await (\n                await fetch(`${ROOT_URL}/installation`, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(info),\n                })\n            ).json()\n        } catch {\n            return null\n        }\n    }\n\n    async function createAccount(amo_id, domain) {\n        try {\n            return await (\n                await fetch(`${ROOT_URL}/registerAccount`, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ amo_id, domain }),\n                })\n            ).json()\n        } catch {\n            return null\n        }\n    }\n\n    async function createWidget(amo_widget_id, name = 'Название виджета', description = 'Описание') {\n        try {\n            return await (\n                await fetch(`${ROOT_URL}/registerWidget`, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        amo_id: amo_widget_id,\n                        name,\n                        description,\n                    }),\n                })\n            ).json()\n        } catch {\n            return null\n        }\n    }\n\n    async function createLicence(widgetId, accountId, test, endDate = null) {\n        try {\n            return await (\n                await fetch(`${ROOT_URL}/licence`, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        widget_id: widgetId,\n                        account_id: accountId,\n                        test,\n                        date_end: endDate,\n                    }),\n                })\n            ).json()\n        } catch {\n            return null\n        }\n    }\n\n    async function createLicenceLead(domain, info) {\n        try {\n            return await (\n                await fetch(`${ROOT_URL}/amo/${domain}/lead`, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(info),\n                })\n            ).json()\n        } catch {\n            return null\n        }\n    }\n\n    async function updateInstallation(installationId, body) {\n        try {\n            return await await fetch(`${ROOT_URL}/installation/${installationId}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(body),\n            })\n        } catch {\n            return null\n        }\n    }\n    return {\n        createAccount,\n        createLicence,\n        createWidget,\n        createInstallation,\n        createLicenceLead,\n        getAccount,\n        getLicence,\n        getWidget,\n        getTariffs,\n        getPaymentUrl,\n        getPayment,\n        getWidgetInfo,\n        getInstallation,\n        updateInstallation,\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n\n//# sourceURL=webpack:///./apiCalls.js?");

/***/ }),

/***/ "./constants.js":
/*!**********************!*\
  !*** ./constants.js ***!
  \**********************/
/***/ ((module, exports) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n    return {\n        ROOT_URL: 'https://devcore.kindcode.ru',\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n\n//# sourceURL=webpack:///./constants.js?");

/***/ }),

/***/ "./renders.js":
/*!********************!*\
  !*** ./renders.js ***!
  \********************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [/*'lib/components/base/modal',*/ __webpack_require__(/*! ./apiCalls.js */ \"./apiCalls.js\"), __webpack_require__(/*! ./statesManager.js */ \"./statesManager.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (/*Modal,*/ apiCalls, statesManager) {\n    const {createLicence} = apiCalls\n    const {widgetId, accountId, widgetInfo, licenceStatus, widgetSettings} = statesManager\n\n    function renderContentInSettings(template) {\n        const contentWrapper = document.querySelector('.widget-content-wrapper')\n        contentWrapper.innerHTML = template\n    }\n\n    function renderPaymentBlock(template) {\n        const paymentWrapper = document.querySelector('.payment')\n        paymentWrapper.innerHTML = template\n    }\n\n    // function renderModal(msg) {\n    //     new Modal({\n    //         class_name: 'modal-window',\n    //         init: function ($modal_body) {\n    //             $modal_body.trigger('modal:loaded').html(msg).trigger('modal:centrify').append('')\n    //         },\n    //         destroy: function () {},\n    //     })\n    // }\n\n    function renderCommentOfferModal(message) {\n        // renderModal(\n        //     `\n        // \t\t<p>\n        // \t\t\tОставьте отзыв на виджет ${widgetInfo().name} ${message}\n        // \t\t</p>\n        // \t\t<button class=\"button-input button-input_blue comment-offer\">Оставить отзыв</button>\n        // \t`\n        // )\n        const commentOfferBtn = document.querySelector('.comment-offer')\n\n        async function onCommentOfferBtnClick() {\n            document.querySelector('.modal-scroller').click()\n\n            const widgetBlock = document.querySelector(`#${widgetSettings().widget_code}`)\n            widgetBlock.click()\n            await new Promise((resolve) => setTimeout(() => resolve(), 1000))\n            const commentBtn = document.querySelector('.widget-additional-info__add-review')\n            console.log(commentBtn)\n            if (commentBtn) {\n                commentBtn.click()\n\n                const widgetInfoBlock = document.querySelector('.widget-settings__additional-block')\n                const observer = new MutationObserver(giveLicence)\n\n                async function giveLicence() {\n                    if (widgetInfoBlock.querySelector('.widget-additional-info__edit-review')) {\n                        const endDateOfTestLicence = new Date(licenceStatus().data.date_end).getTime()\n                        const endDateOfNewLicence = new Date(endDateOfTestLicence + 1000 * 60 * 60 * 24 * 14)\n                        const licenceInfo = await createLicence(widgetId(), accountId(), true, endDateOfNewLicence)\n                        licenceStatus({\n                            exist: true,\n                            expired: false,\n                            data: licenceInfo.data,\n                        })\n                        renderContentInSettings(\n                            `<div style=\"color: green\">Ваша лицензия действительна до ${formatDate(\n                                new Date(licenceStatus().data.date_end)\n                            )}</div>` + '<div class=\"payment\"></div>'\n                        )\n                    }\n                    observer.disconnect()\n                }\n\n                observer.observe(widgetInfoBlock, {childList: true})\n            }\n\n            commentOfferBtn.removeEventListener('click', onCommentOfferBtnClick)\n        }\n\n        commentOfferBtn.addEventListener('click', onCommentOfferBtnClick)\n    }\n\n    return {renderContentInSettings, renderModal, renderPaymentBlock, renderCommentOfferModal}\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n\n//# sourceURL=webpack:///./renders.js?");

/***/ }),

/***/ "./script.js":
/*!*******************!*\
  !*** ./script.js ***!
  \*******************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t__webpack_require__(/*! ./apiCalls.js */ \"./apiCalls.js\"),\n\t__webpack_require__(/*! ./templates.js */ \"./templates.js\"),\n\t__webpack_require__(/*! ./constants.js */ \"./constants.js\"),\n\t__webpack_require__(/*! ./utils.js */ \"./utils.js\"),\n\t__webpack_require__(/*! ./statesManager.js */ \"./statesManager.js\"),\n\t__webpack_require__(/*! ./statesUpdaters.js */ \"./statesUpdaters.js\"),\n\t__webpack_require__(/*! ./renders.js */ \"./renders.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function (apiCalls, templates, constants, utils, statesManager, statesUpdaters, renders) {\n\treturn function () {\n\t\tconst self = this\n\n\t\tconst { createLicence, getTariffs, getPaymentUrl, getPayment, updateInstallation, getWidgetInfo } = apiCalls\n\t\tconst { buyingLicenceTemplate, loaderTemplate } = templates\n\t\tconst {\n\t\t\twidgetId,\n\t\t\taccountId,\n\t\t\tlicenceStatus,\n\t\t\tfirstInit,\n\t\t\tinstallationInfo,\n\t\t\twidgetInfo,\n\t\t\twidgetSettings,\n\t\t\twidgetParams\n\t\t} = statesManager\n\t\tconst { updateAccountId, updateWidgetId, updateLicenceStatus, updateInstallationInfo } = statesUpdaters\n\t\tconst { formatDate, isPhone } = utils\n\t\tconst { renderContentInSettings, renderModal, renderPaymentBlock, renderCommentOfferModal } = renders\n\n\t\tlet finishWidgetInit\n\n\t\tself.onBuyBtnClick = async function (e, selectedTariffId) {\n\t\t\tconst buyBtn = document.querySelector('.payment__buy-btn')\n\t\t\tconst buyBtnSettingsPage = document.querySelector(\n\t\t\t\t'.welbex-settings__payment-page__payment__buy-btn.payment__buy-btn'\n\t\t\t)\n\t\t\tconst tariffs = await getTariffs(widgetId())\n\t\t\tif (!tariffs) {\n\t\t\t\trenderModal('<h1 style=\"color: red\">Ошибка</h1>')\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst hasSelectOption = tariffs.data.find((tariff) => tariff.selected_by_default)\n\t\t\tlet currentTariff = hasSelectOption ? hasSelectOption.id : tariffs.data[0].id\n\t\t\tcurrentTariff = selectedTariffId ? selectedTariffId : currentTariff\n\t\t\te.target.style.display = 'none'\n\t\t\te.target.insertAdjacentHTML('afterend', loaderTemplate())\n\t\t\tconst paymentData = await getPaymentUrl(\n\t\t\t\ttariffs.data.find((tariff) => parseInt(tariff.id) === parseInt(currentTariff)).id,\n\t\t\t\twidgetId(),\n\t\t\t\taccountId()\n\t\t\t)\n\t\t\tconst invId = paymentData.data.invId\n\t\t\tconst tempLink = document.createElement('a')\n\t\t\ttempLink.href = paymentData.data.url\n\t\t\ttempLink.target = '_blank'\n\t\t\ttempLink.click()\n\t\t\ttempLink.remove()\n\t\t\te.target.style.display = 'flex'\n\t\t\te.target.nextElementSibling.style.display = 'none'\n\t\t\tbuyBtnSettingsPage.addEventListener('click', (e) => self.onBuyBtnClick(e, currentTariff))\n\t\t\tbuyBtn.addEventListener('click', (e) => self.onBuyBtnClick(e, currentTariff))\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst updatingLicenceStatus = setInterval(async () => {\n\t\t\t\t\tconst payment = await getPayment(invId)\n\t\t\t\t\tconst paymentStatus = payment.data[0].status\n\t\t\t\t\tif (paymentStatus === 'Completed') {\n\t\t\t\t\t\tsaveBtn.querySelector('span').innerText = 'Сохранить'\n\t\t\t\t\t\trenderModal('<h1 style=\"color: green\">Оплата прошла успешно. Лицензия выдана</h1>')\n\t\t\t\t\t\tawait updateLicenceStatus()\n\t\t\t\t\t\trenderContentInSettings(\n\t\t\t\t\t\t\t`<div style=\"color: green\">Ваша лицензия действительна до ${formatDate(\n\t\t\t\t\t\t\t\tnew Date(licenceStatus().data.date_end)\n\t\t\t\t\t\t\t)}</div>` + '<div class=\"payment\"></div>'\n\t\t\t\t\t\t)\n\t\t\t\t\t\tclearInterval(updatingLicenceStatus)\n\t\t\t\t\t} else if (paymentStatus === 'Failed') {\n\t\t\t\t\t\tbuyBtn.style.display = 'block'\n\t\t\t\t\t\trenderModal('<h1 style=\"color: red\">Ошибка оплаты</h1>')\n\t\t\t\t\t\tclearInterval(updatingLicenceStatus)\n\t\t\t\t\t\tbuyBtnSettingsPage.addEventListener('click', (e) => self.onBuyBtnClick(e, currentTariff))\n\t\t\t\t\t\tbuyBtn.addEventListener('click', (e) => self.onBuyBtnClick(e, currentTariff))\n\t\t\t\t\t}\n\t\t\t\t}, 5000)\n\t\t\t}, 15000)\n\t\t}\n\n\t\tself.renderSettingsPaymentBlock = async function () {\n\t\t\tconst tariffs = await getTariffs(widgetId())\n\t\t\tif (!tariffs) {\n\t\t\t\trenderModal('<h1 style=\"color: red\">Ошибка</h1>')\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst hasSelectOption = tariffs.data.find((tariff) => tariff.selected_by_default)\n\t\t\tlet currentTariff = hasSelectOption ? hasSelectOption.id : tariffs.data[0].id\n\t\t\trenderPaymentBlock(buyingLicenceTemplate(tariffs.data, currentTariff))\n\t\t\tconst paymentWrapper = document.querySelector('.payment')\n\t\t\tpaymentWrapper.insertAdjacentHTML('afterend', `<div class=\"payment__tariffs__current\"></div>`)\n\t\t\tconst buyBtn = document.querySelector('.payment__buy-btn')\n\t\t\tbuyBtn.addEventListener('click', (e) => self.onBuyBtnClick(e, currentTariff))\n\n\t\t\tpaymentWrapper.addEventListener('click', (e) => {\n\t\t\t\tconst item = e.target.closest('.payment__tariffs__item')\n\t\t\t\tif (item) {\n\t\t\t\t\tcurrentTariff = item.getAttribute('data-id')\n\t\t\t\t\tconst currentItemFrame = document.querySelector('.payment__tariffs__current')\n\t\t\t\t\tconst items = document.querySelectorAll('.payment__tariffs__item')\n\t\t\t\t\tcurrentItemFrame.style.transform = `translate(${[...items].indexOf(item) * 156}px)`\n\t\t\t\t\trenderPaymentBlock(buyingLicenceTemplate(tariffs.data, currentTariff))\n\n\t\t\t\t\tconst buyBtn = document.querySelector('.payment__buy-btn')\n\t\t\t\t\tbuyBtn.addEventListener('click', (e) => self.onBuyBtnClick(e, currentTariff))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis.callbacks = {\n\t\t\tsettings: async function () {\n\t\t\t\tconst isInstalling = self.params.widget_active === 'N'\n\n\t\t\t\tconst settingsArea = document.querySelector('.widget_settings_block__fields')\n\t\t\t\tif (!document.querySelector('.widget-content-wrapper')) {\n\t\t\t\t\tsettingsArea.insertAdjacentHTML('afterbegin', '<div class=\"widget-content-wrapper\"></div>')\n\t\t\t\t}\n\t\t\t\tif (widgetParams().test) {\n\t\t\t\t\trenderContentInSettings(`<div style=\"color: green\">Данный виджет использует тестовый режим</div>`)\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\tif (!isInstalling) {\n\t\t\t\t\tawait updateLicenceStatus()\n\t\t\t\t\tif (licenceStatus().exist) {\n\t\t\t\t\t\trenderContentInSettings(\n\t\t\t\t\t\t\t`<div style=\"color: green\">Ваша лицензия действительна до ${formatDate(\n\t\t\t\t\t\t\t\tnew Date(licenceStatus().data.date_end)\n\t\t\t\t\t\t\t)}</div>` + '<div class=\"payment\"></div>'\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (licenceStatus().expired) {\n\t\t\t\t\t\t\trenderContentInSettings(\n\t\t\t\t\t\t\t\t'<div style=\"color: red\">Ваша лицензия истекла</div>' + '<div class=\"payment\"></div>'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trenderContentInSettings(\n\t\t\t\t\t\t\t\t'<div style=\"color: red\">Для использования виджета приобретите или получите тестовую лицензию</div>' +\n\t\t\t\t\t\t\t\t'<div class=\"payment\"></div>'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tself.renderSettingsPaymentBlock()\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t},\n\t\t\tinit: function () {\n\t\t\t\tconst head = document.querySelector('head')\n\t\t\t\tconst settings = self.get_settings()\n\t\t\t\thead.insertAdjacentHTML(\n\t\t\t\t\t'beforeend',\n\t\t\t\t\t`<link href=\"${settings.path}/index.css?v=${settings.version}\" type=\"text/css\" rel=\"stylesheet\">`\n\t\t\t\t)\n\t\t\t\tif (widgetParams().test || licenceStatus().exist) {\n\t\t\t\t\t// TODO: Пишем тут свой код. console.log удаляем\n\t\t\t\t\tconsole.log('init')\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t},\n\t\t\tbind_actions: async function () {\n\t\t\t\tawait new Promise((resolve) => (finishWidgetInit = resolve))\n\t\t\t\tif (widgetParams().test || licenceStatus().exist) {\n\t\t\t\t\t// TODO: Пишем тут свой код. console.log удаляем\n\t\t\t\t\tconsole.log('bind actions')\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t},\n\t\t\trender: async function () {\n\t\t\t\tif (firstInit()) {\n\t\t\t\t\tconst settings = self.get_settings()\n\t\t\t\t\twidgetSettings(settings)\n\t\t\t\t\twidgetInfo(await getWidgetInfo(settings.oauth_client_uuid))\n\n\t\t\t\t\tawait updateWidgetId(self.params.widget_code)\n\t\t\t\t\tawait updateAccountId()\n\t\t\t\t\tawait updateLicenceStatus()\n\n\t\t\t\t\tawait updateInstallationInfo()\n\n\t\t\t\t\tif (!Object.keys(installationInfo())) {\n\t\t\t\t\t\trenderModal(\n\t\t\t\t\t\t\t`<h1 style=\"color: red\">Ошибка виджета ${\n\t\t\t\t\t\t\t\twidgetInfo().name\n\t\t\t\t\t\t\t}. Ссылка для перенаправравления в настройках виджета указана неверно. Для корректной работы виджеты смените ее на https://devcore.kindcode.ru/installation/hook</h1>`\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\tfinishWidgetInit()\n\t\t\t\t\tfirstInit(false)\n\t\t\t\t}\n\t\t\t\tif (widgetParams().test || licenceStatus().exist) {\n\t\t\t\t\tif (window.location.pathname === '/settings/widgets/') {\n\t\t\t\t\t\tif (licenceStatus().data.test && installationInfo().date) {\n\t\t\t\t\t\t\tconst intialDate = new Date(installationInfo().date).getTime()\n\t\t\t\t\t\t\tconst dateAfter3Days = intialDate + 1000 * 60 * 60 * 24 * 3\n\t\t\t\t\t\t\tconst dateAfter6Days = intialDate + 1000 * 60 * 60 * 24 * 6\n\n\t\t\t\t\t\t\tconst date7DaysBefore = Date.now() - 1000 * 60 * 60 * 24 * 7\n\n\t\t\t\t\t\t\tif (date7DaysBefore < intialDate) {\n\t\t\t\t\t\t\t\tlet shouldBeShown\n\t\t\t\t\t\t\t\tlet message\n\t\t\t\t\t\t\t\tif (Date.now() > dateAfter3Days && Date.now() < dateAfter6Days) {\n\t\t\t\t\t\t\t\t\tshouldBeShown = !localStorage.getItem(\n\t\t\t\t\t\t\t\t\t\t`welbex_widget:${widgetId()}:firstCommentOffer`\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\tmessage =\n\t\t\t\t\t\t\t\t\t\t'в маркетплейсе amoCRM и получите дополнительно 14 дней бесплатной работы виджета'\n\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(`welbex_widget:${widgetId()}:firstCommentOffer`, 'true')\n\t\t\t\t\t\t\t\t} else if (Date.now() > dateAfter6Days) {\n\t\t\t\t\t\t\t\t\tshouldBeShown = !localStorage.getItem(\n\t\t\t\t\t\t\t\t\t\t`welbex_widget:${widgetId()}:secondCommentOffer`\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\tmessage =\n\t\t\t\t\t\t\t\t\t\t'подходит к концу, оставьте отзыв в маркетплейсе amoCRM и получите дополнительно 14 дней бесплатной работы виджета'\n\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem(`welbex_widget:${widgetId()}:secondCommentOffer`, 'true')\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (shouldBeShown) {\n\t\t\t\t\t\t\t\t\trenderCommentOfferModal(message)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: Пишем тут свой код. console.log удаляем\n\t\t\t\t\tconsole.log('render')\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t},\n\t\t\tdpSettings: function () {\n\t\t\t},\n\t\t\tadvancedSettings: function () {\n\t\t\t},\n\t\t\tdestroy: function () {\n\t\t\t},\n\t\t\tcontacts: {\n\t\t\t\tselected: function () {\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSalesbotDesignerSave: function () {\n\t\t\t},\n\t\t\tleads: {\n\t\t\t\tselected: function () {\n\t\t\t\t}\n\t\t\t},\n\t\t\ttodo: {\n\t\t\t\tselected: function () {\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSave: async function ({ active }) {\n\t\t\t\tconst isInstalling = self.params.widget_active === 'N'\n\t\t\t\tconst isUninstalling = active === 'N'\n\n\t\t\t\tif (isInstalling) {\n\t\t\t\t\tif (!licenceStatus().exist) {\n\t\t\t\t\t\tconst licenceInfo = await createLicence(widgetId(), accountId(), true)\n\t\t\t\t\t\tif (licenceInfo.errors) {\n\t\t\t\t\t\t\trenderModal('<h1 style=\"color: red\">Ошибка получения тестовой лицензии</h1>')\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlicenceStatus({\n\t\t\t\t\t\t\texist: true,\n\t\t\t\t\t\t\texpired: false,\n\t\t\t\t\t\t\tdata: licenceInfo.data\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\t// амо меняет данное свойство только после перезагрузки страницы, поэтому пришлось сделать такой костыль\n\t\t\t\t\tself.params.widget_active = 'Y'\n\t\t\t\t\tthis.settings()\n\t\t\t\t} else if (isUninstalling) {\n\t\t\t\t\tif (installationInfo()) {\n\t\t\t\t\t\tawait updateInstallation(installationInfo().id, {\n\t\t\t\t\t\t\tis_installed: false\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t// очищаем настройки\n\t\t\t\t\trenderContentInSettings('')\n\t\t\t\t}\n\n\t\t\t\treturn true\n\t\t\t},\n\t\t\tonAddAsSource: function (pipeline_id) {\n\t\t\t}\n\t\t}\n\t\treturn this\n\t}\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n\n//# sourceURL=webpack:///./script.js?");

/***/ }),

/***/ "./statesManager.js":
/*!**************************!*\
  !*** ./statesManager.js ***!
  \**************************/
/***/ ((module, exports) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n    const states = {}\n\n    function createState(name, initialValue) {\n        let value = initialValue\n\t    states[name] = (setter) =>\n\t        setter ? (typeof setter === 'function' ? (value = setter(value)) : (value = setter)) : value\n    }\n\n    createState('widgetId', null)\n    createState('accountId', null)\n    createState('licenceStatus', { exist: false, expired: false, data: null })\n    createState('firstInit', true)\n    createState('installationInfo', null)\n    createState('widgetInfo', {})\n    createState('widgetSettings', {})\n    createState('widgetParams', null)\n    return states\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n\n//# sourceURL=webpack:///./statesManager.js?");

/***/ }),

/***/ "./statesUpdaters.js":
/*!***************************!*\
  !*** ./statesUpdaters.js ***!
  \***************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./apiCalls.js */ \"./apiCalls.js\"), __webpack_require__(/*! ./statesManager.js */ \"./statesManager.js\"), __webpack_require__(/*! ./renders.js */ \"./renders.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (apiCalls, statesManager, renders) {\n    const {\n        createAccount,\n        createLicence,\n        createLicenceLead,\n        getAccount,\n        getLicence,\n        getWidget,\n        createWidget,\n        getInstallation,\n    } = apiCalls\n    const { renderModal } = renders\n\n    const { widgetId, accountId, licenceStatus, firstInit, installationInfo, widgetInfo, widgetParams } = statesManager\n\n    async function updateInstallationInfo() {\n        let installation = await getInstallation(accountId(), widgetId())\n\n        if (!installation.data) {\n            // так как после прихода хука может быть задержка, ждем 3 секунды и снова проверяем\n            await new Promise((resolve) => setTimeout(resolve, 3000))\n            installation = await getInstallation(accountId(), widgetId())\n\n            // если и тут ничего не получили, то уже выбрасываем ошибку\n            if (!installation.data) {\n                installationInfo({})\n                return\n            }\n        }\n        installationInfo(installation.data)\n\n        if (!installationInfo().dataStored) {\n            const data = widgetInfo()\n            const licenceInfo = {\n                email: AMOCRM.constant('user').login,\n                widget_name: data.name,\n                tariff: AMOCRM.constant('account').tariffName,\n                licence_end_date: AMOCRM.constant('account').paid_till,\n                last_extended: AMOCRM.constant('account').paid_from,\n                installation_id: installationInfo().id,\n            }\n            createLicenceLead(AMOCRM.constant('account').subdomain, licenceInfo)\n        }\n    }\n\n    async function updateWidgetId(amoWidgetId) {\n        let widget = await getWidget(amoWidgetId)\n        if (!widget || !widget.data) {\n            renderModal(\n                '<h1 style=\"color: red\">Ваш виджет не зарегистрирован в базе ядра. Пожалуйста, прочтите инструкцию по работе с ядром</h1>'\n            )\n            return null\n        }\n        widgetId((widget.data[0] || widget.data).id)\n        widgetParams(widget.data[0] || widget.data || {})\n    }\n\n    async function updateAccountId() {\n        const amoId = AMOCRM.constant('account').id\n        let account = await getAccount(amoId)\n\n        if (!account) {\n            renderModal('<h1 style=\"color: red\">Ошибка</h1>')\n            return true\n        }\n        if (!account.data) {\n            const domain = AMOCRM.constant('account').subdomain\n\n            account = await createAccount(amoId, domain)\n\n            if (!account) {\n                renderModal('<h1 style=\"color: red\">Ошибка</h1>')\n                return true\n            }\n        }\n        accountId((account.data[0] || account.data).id)\n    }\n    async function updateLicenceStatus() {\n        const licenseInfo = await getLicence(widgetId(), accountId())\n\n        if (licenseInfo.data) {\n            licenceStatus({\n                exist: true,\n                expired: false,\n                data: licenseInfo.data,\n            })\n        } else if (licenseInfo.msg && licenseInfo.msg.includes('expired')) {\n            licenceStatus({ exist: false, expired: true, data: null })\n        } else {\n            const licenceInfo = await createLicence(widgetId(), accountId(), true)\n            licenceStatus({\n                exist: true,\n                expired: false,\n                data: licenceInfo.data,\n            })\n        }\n    }\n\n    async function updateFirstInit() {\n        firstInit(false)\n    }\n    return {\n        updateAccountId,\n        updateWidgetId,\n        updateLicenceStatus,\n        updateFirstInit,\n        updateInstallationInfo,\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n\n//# sourceURL=webpack:///./statesUpdaters.js?");

/***/ }),

/***/ "./templates.js":
/*!**********************!*\
  !*** ./templates.js ***!
  \**********************/
/***/ ((module, exports) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\treturn {\n\t\tlicenceIsExpiredTemplate: () => {\n\t\t\treturn '<div class=\"licence-status\" style=\"background-color: red\">Лицензия истекла</div>'\n\t\t},\n\t\tgetTestLicenceTemplate: () => {\n\t\t\treturn '<div class=\"licence-status\" style=\"background-color: green; cursor: pointer\">Получить тестовую лицензию</button></div>'\n\t\t},\n\t\tbuyingLicenceTemplate: (tariffs, currentTariffId) => {\n\t\t\tconst formatDate = new Intl.DateTimeFormat('ru-RU').format\n\t\t\tconst currentTariff = tariffs.find(tariff => parseInt(tariff.id) === parseInt(currentTariffId))\n\t\t\treturn `\n\t\t\t\t<div class=\"payment__tariffs\">\n\t\t\t\t\t${tariffs\n\t\t\t\t\t\t.map((tariff, index) => {\n\t\t\t\t\t\t\treturn `\n\t\t\t\t\t\t\t<div id=\"payment__tariffs__item\" data-index=\"${index}\" class=\"payment__tariffs__item ${\n\t\t\t\t\t\t\t\tparseInt(tariff.id) === parseInt(currentTariffId) && 'payment__tariffs__item--current'\n\t\t\t\t\t\t\t}\" data-id=\"${tariff.id}\">\n\t\t\t\t\t\t\t\t<div class=\"payment__tariffs__item__title\">${tariff.title}</div>\n\t\t\t\t\t\t\t\t<div class=\"payment__tariffs__item__description\">${tariff.description}</div>\n\t\t\t\t\t\t\t\t<div class=\"payment__tariffs__item__price\">${tariff.price}  &#x20bd;</div>\n\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\n\t\t\t\t\t\t`\n\t\t\t\t\t\t})\n\t\t\t\t.join('')}\n\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div class=\"payment__info\">\n\t\t\t\t\t<div class=\"payment__info__date\">До ${formatDate(\n\t\t\t\t\t\tnew Date(Date.now() + currentTariff.duration * 1000)\n\t\t\t\t\t)}</div>\n\t\t\t\t\t<div class=\"payment__info__price\">${currentTariff.price} руб.</div>\n\t\t\t\t\t<div class=\"payment__buy-btn\">Оплатить онлайн</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t` \n\t\t},\n\t\tloaderTemplate: () => `\n\t\t\t<div class=\"gd-widget-body__loader-wrapper\">\n\t\t\t\t<div id=\"amocrm-spinner\" style=\"both:clear;\">\n\t\t\t\t\t<span style=\"width: 20px;height: 20px;margin: 0 auto;display: block;position: static;\" class=\"pipeline_leads__load_more__spinner spinner-icon spinner-icon-abs-center\">\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n        `\n\t}\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n\n//# sourceURL=webpack:///./templates.js?");

/***/ }),

/***/ "./utils.js":
/*!******************!*\
  !*** ./utils.js ***!
  \******************/
/***/ ((module, exports) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\treturn {\n\t\tformatDate: date => new Intl.DateTimeFormat('ru-RU').format(date),\n\t\tisPhone: string => /^(\\+7|7|8)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/.test(string)\n\t}\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n\n//# sourceURL=webpack:///./utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./script.js");
/******/ 	
/******/ })()
;